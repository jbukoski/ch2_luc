luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_210_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "blue", "green")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(13, 13.7)) +
scale_x_continuous(breaks = seq(99, 102, 0.2)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_210_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "white")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(13, 13.7)) +
scale_x_continuous(breaks = seq(99, 102, 0.2)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_150_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "white")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(13, 13.7)) +
scale_x_continuous(breaks = seq(99, 102, 0.2)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_150_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "dark green")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(13, 13.7)) +
scale_x_continuous(breaks = seq(99, 102, 0.2)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_150_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "dark green")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(13, 13.7)) +
scale_y_continuous(breaks = seq(13, 13.6, 0.2)) +
scale_x_continuous(breaks = seq(99, 102, 0.5)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_150_df, aes(x = x, y = y, alpha = value, colour = "grey")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "dark green")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(12.9, 13.7)) +
scale_y_continuous(breaks = seq(12.9, 13.7, 0.2)) +
scale_x_continuous(breaks = seq(99, 102, 0.5)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
e <- extent(99.5, 101.5, 12.8, 13.8)
luc_centro <- crop(gmw_luc, e)
luc_df <- as.data.frame(luc_centro, na.rm = T, xy = T) %>%
rename(value = "gmw_luc", x = "x", y = "y") %>%
mutate(col = ifelse(value == 1, "red",
ifelse(value == 2, "blue", "green")))
ndvi <- raster("./data/processed/centro_ndvi.tif") %>%
crop(e)
ndvi_150 <- aggregate(ndvi, fact = 5)
ndvi_150_df <- as.data.frame(ndvi_150, na.rm = T, xy = T) %>%
rename(y = "y", x = "x", value = "centro_ndvi")
luc_plot <- ggplot() +
#geom_raster(data = ndvi_210_df, aes(x = x, y = y, fill = value, alpha = value)) +
geom_raster(data = ndvi_150_df, aes(x = x, y = y, alpha = value, colour = "white")) +
#scale_fill_gradient(low = "white", high = "black") +
geom_raster(data = luc_df, aes(x = x, y = y, fill = factor(value))) +
scale_fill_manual(values = c("red", "green", "dark green")) +
theme_bw() +
coord_sf(xlim = c(99.8, 101.2), ylim = c(12.9, 13.7)) +
scale_y_continuous(breaks = seq(12.9, 13.7, 0.2)) +
scale_x_continuous(breaks = seq(99, 102, 0.5)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none")
luc_plot
ggplot2::ggsave(luc_plot, device = "jpeg",
filename = "./figs/draft_luc_plot_2.jpg",
width = 10, height = 9, units = "in")
library(tidyverse)
library(ggsn);
library(ggplot2);
library(sf)
data("domestic_violence")
library(ggspatial)
ggm1 <- ggplot(domestic_violence, aes(fill = Scaled)) +
geom_sf() +
scale_fill_continuous(low = "#fff7ec", high = "#7F0000") +
ggspatial::annotation_north_arrow(style = north_arrow_nautical(
text_col = "grey"
))
ggm1
ggm1 <- ggplot(domestic_violence, aes(fill = Scaled)) +
geom_sf() +
scale_fill_continuous(low = "#fff7ec", high = "#7F0000") +
ggspatial::annotation_north_arrow(style = north_arrow_nautical(
text_col = "grey",
line_col = "grey"
))
ggm1
loss <- raster("./data/processed/loss.tif")
library(raster)
loss <- raster("./data/processed/loss.tif")
loss <- raster("./data/processed/loss.tif")
gain <- raster("./data/processed/gain.tif")
same <- raster("./data/processed/noChange.tif")
chongwats <- read_sf("./data/processed/cstl_prvncs")
library(sf)
chongwats <- read_sf("./data/processed/cstl_prvncs")
chongwats
test <- aggregate(. ~ region, chongwats)
library(rgdal)
chongwats <- readOGR("./data/processed/cstl_prvncs")
test <- unionSpatialPolygons(chongwats, region)
?unionSpatialPolygons
??unionSpatialPolygons
test <- chongwats %>%
group_by(region) %>%
summarise(do_union = true)
library(tidyverse)
test <- chongwats %>%
group_by(region) %>%
summarise(do_union = true)
chongwats <- read_sf("./data/processed/cstl_prvncs")
test <- chongwats %>%
group_by(region) %>%
summarise(do_union = true)
test <- chongwats %>%
group_by(region) %>%
summarise(do_union = TRUE)
test
extract(loss, test, fun=sum, na.rm=TRUE, df=TRUE)
raster::extract(loss, test, fun=sum, na.rm=TRUE, df=TRUE)
thai1996 <- raster("./data/processed/GMW_1996_thai.tif")   # value = 1
thai2016 <- raster("./data/processed/GMW_2016_thai.tif")   # value = 2
zonal(thai_1996, chongwats, fun = "sum", na.rm = TRUE)
zonal(thai1996, chongwats, fun = "sum", na.rm = TRUE)
chongwats <- raster("~/Dropbox/manuscripts/ch2_luc/analysis/data/scratch/chongwats.tif")
zonal(thai1996, chongwats, fun = "sum", na.rm = TRUE)
ha_1996 <- c(172931, 272735, 206557, 1848316)
ha_1996
ha_1996 * 900 * 0.0001
sum(ha_1996 * 900 * 0.0001)
zonal(thai2016, chongwats, fun = "sum", na.rm = TRUE)
ha_2016 <- c(195842, 512646, 390588, 3659486)
ha_2016 * 900 * 0.0001
ha_2016 / 2 * 900 * 0.0001
sum(ha_2016 / 2 * 900 * 0.0001)
vec <- ha_2016 / 2 * 900 * 0.0001
vec
vec2 <- c(15563.79, 24546.15, 18590.13, 166348.44)
vec2 - vec
library(tidyverse)
library(raster)
library(sp)
agb <- raster("./data/raw/carbon/Mangrove_agb_Thailand.tif")
chongwats <- raster("~/Dropbox/manuscripts/ch2_luc/analysis/data/scratch/chongwats.tif")
plot(agb)
chongwats
agb_mean <- zonal(agb, chongwats, fun="mean", na.rm=TRUE)
extent(chongwats)
extent(agb)
extent(chongwats) <- extent(agb)
extent(chongwats)
agb_mean <- zonal(agb, chongwats, fun="mean", na.rm=TRUE)
chongwats
agb
cw_new <- resample(chongwats, agb, "bilinear")
cw_new
agb
agb_mean <- zonal(agb, chongwats, fun="mean", na.rm=TRUE)
agb
head(agb)
cw_new <- crop(cw_new, extent(agb))
cw_new
compareRaster(cw_new, agb)
agb_mean <- zonal(agb, cw_new, fun="mean", na.rm=TRUE)
agb_mean
soc <- raster("./data/raw/carbon/Mangrove_soc_Thailand.tif")
soc
cw_soc <- resample(chongwats, soc, "bilinear")
cw_soc <- crop(cw_soc, extent(soc))
soc_mean <- zonal(soc, cw_soc, fun="mean", na.rm=TRUE)
soc_mean
soc_mean <- zonal(soc, cw_soc, fun="sd", na.rm=TRUE)
soc_mean
soc_sd <- soc_mean
soc_sd
soc_mean <- zonal(soc, cw_soc, fun="mean", na.rm=TRUE)
soc_mean
agb_mean <- zonal(agb, cw_agb, fun="mean", na.rm=TRUE)
agb_sd <- zonal(agb, cw_agb, fun="sd", na.rm=TRUE)
cw_agb <- resample(chongwats, agb, "bilinear")
cw_agb <- crop(cw_agb, extent(agb))
agb_mean <- zonal(agb, cw_agb, fun="mean", na.rm=TRUE)
agb_sd <- zonal(agb, cw_agb, fun="sd", na.rm=TRUE)
agb_mean * 0.47
agb_sd * 0.47
soc_mean
soc_sd
agb_mean <- c(49.35, 47.37, 61.70, 62.41)
soc_mean <- c(312.28, 300.83, 298.64, 306.93)
ecosystem = agb_mean + soc_mean
ecosystem
loss <- c(7166.97, 2288.79, 1565.46, 4035.42)
gain <- c(416.07, 811.71, 551.79, 2363.85)
loss * ecosystem
sum(loss * ecosystem)
sum(loss * ecosystem) * 3.67
gain * agb_mean
sum(gain * agb_mean )
sum(gain * agb_mean ) * 3.57
area1961 <- c(66981, 54845, 103200, 231400)
area1996 <- c(15563, 24546, 18590, 166348)
areaChange <- area1961 - area1996
sum(areaChange)
areaChange
areaChange * agb_mean
areaChange * ecosystem
sum(areaChange * ecosystem)
sum(areaChange * ecosystem) * 3.57 / 1000
1996-1961
sum(areaChange * ecosystem) * 3.57 / 1000 / 35
library(sp)
library(tidyverse)
library(sf)
library(sp)
;library(raster)
library(raster)
lulc2000 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_43.shp")
lulc2000 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_43.shp")
lulc2014 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_57.shp")
lulc2000
sample_area <- st_union(lulc2000)
sample_area <- st_sample(lulc2000, 2000, type = "random", exact = TRUE)
sample_area <- st_sample(lulc2000, 10, type = "random", exact = TRUE)
sample_area
pts <- st_sample(lulc2000, 10, type = "random", exact = TRUE)
lulc2000 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_43.shp") %>%
select(-GZONE_NAME)
lulc2000 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_43.shp") %>%
dplyr::select(-GZONE_NAME)
lulc2000
head(lulc2000)
lulc2000
pts <- st_sample(lulc2000, 30, type = "random", exact = TRUE)
ptsData <- st_intersection(lulc2000, pts)
ptsData
lulc2000 <- read_sf("~/Documents/dmcr_data/Land use (2000 and 2014)/MG_TYPE_43.shp") %>%
dplyr::select(CODE)
lucl2000
lulc2000
ptsData <- st_intersection(lulc2000, pts)
ptsData
plot(ptsData)
pts <- st_sample(lulc2000, 5000, type = "random", exact = TRUE)
ptsData <- st_intersection(lulc2000, pts)
pts <- st_sample(lulc2000, 2500, type = "random", exact = TRUE)
ptsData <- st_intersection(lulc2000, pts)
plot(ptsData)
writeOGR(ptsData, "~/Documents/dmcr_data/ptsData.shp", layer = "ptsData", driver = "ESRI Shapefile")
??writeOGR
library(rgdal)
writeOGR(ptsData, "~/Documents/dmcr_data/ptsData.shp", layer = "ptsData", driver = "ESRI Shapefile")
ptsData_sp <- as(ptsData, "Spatial")
writeOGR(ptsData, "~/Documents/dmcr_data/ptsData.shp", layer = "ptsData", driver = "ESRI Shapefile")
writeOGR(ptsData_sp, "~/Documents/dmcr_data/ptsData.shp", layer = "ptsData", driver = "ESRI Shapefile")
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
ptsData_sp
ptsData_sp
as.factor(ptsData_sp$CODE)
as.numeric(as.factor(ptsData_sp$CODE))
ptsData_sp$code_num <- as.numeric(as.factor(ptsData_sp$CODE))
ptsData_sp
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
newDat <- read_sf("~/Documents/dmcr_data/drive-download-20200225T202914Z-001/exportedDataPoints.shp")
newDat
plot(newDat$code, newDat$mmri)
plot(newDat$CODE, newDat$mmri)
plot(newDat$CODE ~newDat$mmri)
ptsData_sp
thai <- read_sf("~/Dropbox/manuscripts/ch2_luc/analysis/data/raw/tha_admbnda_adm0_rtsd_20190221.shp")
plot(thai)
?st_intersection
ptsDataClip <- st_intersection(ptsData, thai)
thai
ptsData
thai <- read_sf("~/Dropbox/manuscripts/ch2_luc/analysis/data/raw/tha_admbnda_adm0_rtsd_20190221.shp") %>%
st_transform(CRS(lulc2000))
CRS(lulc2000)
st_crs(lulc2000)
thai <- read_sf("~/Dropbox/manuscripts/ch2_luc/analysis/data/raw/tha_admbnda_adm0_rtsd_20190221.shp") %>%
st_transform(st_crs(lulc2000))
thai
ptsDataClip <- st_intersection(ptsData, thai)
ptsDataClip
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
ptsData_sp <- as(ptsDataClip, "Spatial")
ptsData_sp
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
ptsDataClip$code_num <- as.numeric(pdsDataClip$CODE)
ptsDataClip$code_num <- as.numeric(ptsDataClip$CODE)
ptsDataClip
ptsDataClip$code_num <- as.numeric(ptsDataClip$CODE) %>%
select(code_num, code = CODE)
ptsDataClip$code_num <- as.numeric(ptsDataClip$CODE) %>%
dplyr::select(code_num, code = CODE)
ptsDataClip
ptsDataClip <- st_intersection(ptsData, thai) %>%
dplyr::select(code = CODE)
select(ptsDataClip, code = CODE)
dplyr::select(ptsDataClip, code = CODE)
ptsDataClip$code_num <- as.numeric(ptsDataClip$code)
ptsDataClip <_ dplyr::select(ptsDataClip, code = CODE)
ptsDataClip <- dplyr::select(ptsDataClip, code = CODE)
ptsDataClip$code_num <- as.numeric(ptsDataClip$code)
ptsDataClip
ptsDataClip$code_num <- as.numeric(as.factor(ptsDataClip$code))
ptsDataClip
ptsData_sp <- as(ptsDataClip, "Spatial")
ptsData_sp
writeOGR(ptsData_sp, "~/Documents/dmcr_data/", layer = "ptsData", driver = "ESRI Shapefile")
newDat <- read_sf("~/Documents/dmcr_data/drive-download-20200225T202914Z-001/exportedDataPoints.shp")
newDat
complete.cases(newDat)
geometry(netDat) <- NULL
geometry(newDat) <- NULL
st_geometry(newDat) <- NULL
newDat
complete(newDat)
drop_na(newDat)
newDat <- drop_na(newDat)
newDat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)))
newDat
library(randomForest)
rf <- randomForest(code_num ~ ., data = newDat)
rf
newDat
newDat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE))) %>%
select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi)
newDat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE))) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi)
rf <- randomForest(code_num ~ ., data = newDat)
rf <- randomForest(code_num ~ ., data = newDat[0:1500,])
trnDat <-sample(newDat, 1500)
newDat
trnDat <- sample(1500, newDat)
?sample
trnDat <- sample_n(newDat, 1500)
trnDat
newDat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi)
newDat <- read_sf("~/Documents/dmcr_data/drive-download-20200225T202914Z-001/exportedDataPoints.shp")
st_geometry(newDat) <- NULL
dat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi)
dat
dat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
dat
trnDat <- sample_n(dat, 1500)
trnDat
valDat <- dat[!trnDat$idx,]
valDat <- dat[dat$idx !%in% trnDat$idx, ]
valDat <- dat %>%
filter(idx !%in% trnDat$idx)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
valDat
rf <- randomForest(code_num ~ ., data = trnDat)
trnDat <- select(trnDat, -idx)
trnDat <- dplyr::select(trnDat, -idx)
valDat <- dplyr::select(valDat, -idx)
trnDat
valDat
rf <- randomForest(code_num ~ ., data = trnDat)
pred <- predict(rf, valDat)
pred
cm <- table(valDat, round(pred))
dat <- drop_na(newDat) %>%
mutate(code_num = as.factor(CODE),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
trnDat <- sample_n(dat, 1500)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
trnDat <- dplyr::select(trnDat, -idx)
valDat <- dplyr::select(valDat, -idx)
rf <- randomForest(code_num ~ ., data = trnDat)
pred <- predict(rf, valDat)
dat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
trnDat <- sample_n(dat, 1500)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
trnDat <- dplyr::select(trnDat, -idx)
valDat <- dplyr::select(valDat, -idx)
rf <- randomForest(code_num ~ ., data = trnDat)
pred <- predict(rf, valDat)
cm <- table(valDat, pred)
pred
cm <- table(valDat, as.data.frame(pred))
class(valDat)
class(pred)
valDat
cm <- table(valDat$code_num, as.data.frame(pred))
valDat$code_num
length(valDat$code_num)
length(pred)
cm <- table(valDat$code_num, pred)
cm
cm <- table(valDat$code_num, round(pred))
cm
unique(trnDat$code_num)
sort(unique(trnDat$code_num))
sort(unique(valDat$code_num))
dat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
trnDat <- sample_n(dat, 1500)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
sort(unique(valDat$code_num))
sort(unique(trnDat$code_num))
dat %>% group_by(code_num) %>% summarize(no_rows = length(code_num))
dat <- drop_na(newDat) %>%
mutate(code_num = as.numeric(as.factor(CODE)),
idx = row_number()) %>%
filter(!(code_num %in% c(3, 4, 8))) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
dat %>% group_by(code_num) %>% summarize(no_rows = length(code_num))
trnDat <- sample_n(dat, 1500)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
trnDat <- dplyr::select(trnDat, -idx)
valDat <- dplyr::select(valDat, -idx)
rf <- randomForest(code_num ~ ., data = trnDat)
pred <- predict(rf, valDat)
cm <- table(valDat$code_num, round(pred))
cm
sort(unique(trnDat$code_num))
sort(unique(valDat$code_num))
dat <- drop_na(newDat) %>%
mutate(code_num = as.factor(CODE),
idx = row_number()) %>%
filter(!(code_num %in% c(3, 4, 8))) %>%
dplyr::select(code_num, ndmi, mmri, mndwi, evi, diff, ndvi, ndwi, dtm, ndsi, idx)
trnDat <- sample_n(dat, 1500)
valDat <- dat %>%
filter(!(idx %in% trnDat$idx))
trnDat <- dplyr::select(trnDat, -idx)
valDat <- dplyr::select(valDat, -idx)
rf <- randomForest(code_num ~ ., data = trnDat)
pred <- predict(rf, valDat)
cm <- table(valDat$code_num, round(pred))
cm <- table(valDat$code_num, pred)
cm
row_sum(cm)
rowSums(cm)
sort(unique(ptdData_sp))
sort(unique(ptsData_sp))
sort(unique(ptsData_sp$code_num))
unique(ptsData_sp$code_num, ptsData_sp$code)
unique(pts_data_sp)
unique(ptsData_sp)
ptsData_sp
ptsData_df <- as.data.frame(ptsData_sp)
ptsData_df
ptsData_df <- ptsData_df %>% dplyr::select(code, code_num)
unique(ptsData_df)
